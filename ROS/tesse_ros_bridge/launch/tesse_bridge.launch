<!--
     Launch TESSE simulator as well as stereo_gray and semantic point
     cloud reconstructions optionally.
     RVIZ is used for visualization.
-->
<launch>
  <arg name="ns"                    default="tesse"/>
  <arg name="publish_point_clouds"  default="false"/>
  <arg name="visualize"             default="false"/>
  <arg name="teleop"                default="false"/>
  <arg name="enable_step_mode"      default="false"/>

  <!-- Network arguments -->
  <arg name="client_ip"             default="127.0.0.1"/>
  <arg name="self_ip"               default="127.0.0.1"/>

  <!-- Camera arguments -->
  <!-- Parse these using calibration.yaml, and calculate fov inside code! -->
  <!-- NOTE: 'fov' is VERTICAL FOV, not horizontal. Horizontal is derived. -->
  <arg name="vertical_fov"          default="60"/>
  <arg name="width"                 default="720"/>
  <arg name="height"                default="480"/>
  <arg name="stereo_baseline"       default="0.10"/>

  <!-- Sim arguments -->
  <arg name="use_sim_time"          default="true"/>
  <arg name="speedup_factor"        default="1"/>
  <arg name="frame_rate"            default="20.0"/>
  <arg name="imu_rate"              default="200"/>
  <arg name="enable_collision"      default="false"/>
  <arg name="initial_scene"         default="2"/> <!-- 2: bright office scene -->

  <!-- Frame arguments -->
  <arg name="world_frame_id"        default="world"/>
  <arg name="body_frame_id"         default="base_link_gt"/>
  <arg name="left_cam_frame_id"     default="left_cam"/>
  <arg name="right_cam_frame_id"    default="right_cam"/>

  <!-- If use_sim, simulator will publish clock modified by speedup_factor -->
  <param name="use_sim_time" value="$(arg use_sim_time)"/>

  <node ns="$(arg ns)" name="tesse_ros_bridge" pkg="tesse_ros_bridge"
        type="tesse_ros_node.py" output="screen">
    <!-- Topics -->
    <remap from="left_cam/image_raw"     to="left_cam/image_raw"/>
    <remap from="right_cam/image_raw"    to="right_cam/image_raw"/>
    <remap from="segmentation/image_raw" to="segmentation/image_raw"/>
    <remap from="depth/image_raw"        to="depth/image_raw"/>

    <remap from="left_cam/camera_info"     to="left_cam/camera_info"/>
    <remap from="right_cam/camera_info"    to="right_cam/camera_info"/>
    <remap from="segmentation/camera_info" to="segmentation/camera_info"/>
    <remap from="depth/camera_info"        to="depth/camera_info"/>

    <param name="teleop"           value="$(arg teleop)"/>
    <param name="enable_step_mode" value="$(arg enable_step_mode)"/>

    <!-- Network Unity params -->
    <param name="client_ip"        value="$(arg client_ip)"/>
    <param name="self_ip"          value="$(arg self_ip)"/>
    <param name="position_port"    value="9000"/>
    <param name="metadata_port"    value="9001"/>
    <param name="image_port"       value="9002"/>
    <param name="udp_port"         value="9004"/>
    <param name="step_port"        value="9005"/>

    <!-- Camera params -->
    <param name="camera_vertical_fov"  value="$(arg vertical_fov)"/>
    <param name="camera_width"         value="$(arg width)"/>
    <param name="camera_height"        value="$(arg height)"/>
    <param name="stereo_baseline"      value="$(arg stereo_baseline)"/>

    <!-- Simulator and speed parameters -->
    <param name="speedup_factor"    value="$(arg speedup_factor)"/>
    <param name="frame_rate"        value="$(arg frame_rate)"/>
    <param name="imu_rate"          value="$(arg imu_rate)"/>
    <param name="enable_collision"  value="$(arg enable_collision)"/>
    <param name="initial_scene"     value="$(arg initial_scene)"/>

    <!-- Frame parameters -->
    <param name="world_frame_id"     value="$(arg world_frame_id)"/>
    <param name="body_frame_id"      value="$(arg body_frame_id)"/>
    <param name="left_cam_frame_id"  value="$(arg left_cam_frame_id)"/>
    <param name="right_cam_frame_id" value="$(arg right_cam_frame_id)"/>
  </node>

  <group if="$(arg publish_point_clouds)">

    <!-- Convert it into a point cloud -->
    <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager"
          output="screen"/>

    <!-- Rectified raw image (internal use) -->
    <!-- <node pkg="nodelet" type="nodelet" name="rectify_depth"
          args="load image_proc/rectify nodelet_manager -\-no-bond">
      <remap from="camera_info" to="/$(arg ns)/left_cam/camera_info"/>
      <remap from="image_mono"  to="/$(arg ns)/depth" />
      <remap from="image_rect"  to="depth_rectified" />
      <param name="interpolation" value="0" />
    </node> -->

    <!-- For registered semantic point cloud conversion -->
    <node pkg="nodelet" type="nodelet" name="cloudify"
          args="load depth_image_proc/point_cloud_xyzrgb nodelet_manager
          -no-bond">
      <remap from="rgb/camera_info"             to="/$(arg ns)/left_cam/camera_info"/>
      <remap from="rgb/image_rect_color"        to="/$(arg ns)/segmentation"/>
      <remap from="depth_registered/image_rect" to="/$(arg ns)/depth"/>

      <remap from="depth_registered/points"     to="points"/>

      <param name="queue_size" value="20"/>
    </node>

    <!-- For stereo point cloud conversion -->
    <node pkg="nodelet" type="nodelet" name="xyz"
          args="load depth_image_proc/point_cloud_xyz nodelet_manager -no-bond">
      <remap from="camera_info"              to="/$(arg ns)/left_cam/camera_info"/>
      <!-- <remap from="/tesse/camera_info"       to="/$(arg ns)/left_cam/camera_info"/> TODO: do we need this? -->
      <remap from="image_rect/camera_info"   to="/$(arg ns)/depth/camera_info"/>

      <remap from="image_rect"               to="/$(arg ns)/depth"/>
      <remap from="points"                   to="gt_point_cloud_xyz"/>

      <param name="queue_size" value="10"/>
    </node>

     <!-- Run stereo_dense_reconstruction_node -->
    <node ns="stereo_gray" name="stereo_image_proc" pkg="stereo_image_proc"
          type="stereo_image_proc" clear_params="true" output="screen">
      <remap from="left/image_rect_color" to="/dev/null/left_cam"/>
      <remap from="right/image_rect_color" to="/dev/null/right_cam"/>

      <remap from="left/image_raw"                to="/$(arg ns)/left_cam"/>
      <remap from="left/camera_info"              to="/$(arg ns)/left_cam/camera_info"/>
      <remap from="right/image_raw"               to="/$(arg ns)/right_cam"/>
      <remap from="right/camera_info"             to="/$(arg ns)/right_cam/camera_info"/>

      <param name="approximate_sync" value="true" />
    </node>
  </group>

  <group if="$(arg visualize)">
    <node pkg="rviz" type="rviz" name="rviz"
          args="-d $(find tesse_ros_bridge)/rviz/tesse_semantic_without_voxblox.rviz"/>
  </group>

  <!-- Launch Teleop Node -->
  <group if="$(arg teleop)">
    <node pkg="key_teleop" type="key_teleop.py" name="key_teleop" output="screen"
          launch-prefix="gnome-terminal --">
      <param name="forward_rate"  value="1.0"/>
      <param name="backward_rate" value="0.8"/>
      <param name="rotation_rate" value="1.0"/>
      <param name="strafe_rate"   value="0.8"/>

      <remap from="key_vel"       to="cmd_vel"/>
    </node>
  </group>
</launch>
